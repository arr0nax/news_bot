<?php
function News_menu() {
  $items = array();
  $items['generate_words'] = array(
    'title' => 'Generate Words',
    'page callback' => 'get_words',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM
  );
  $items['which_website'] = array(
    'title' => 'Pick A Website',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('site_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['grab_website'] = array(
    'title' => 'Grab Website',
    'page callback' => 'grab_website',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items['redirect'] = array(
    'title' => 'Redirect To a Website',
    'page callback' => 'redirect',
    'access argunents' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items['save_phrase'] = array(
    'title' => 'Save a phrase',
    'page callback' => 'save_phrase',
    'access argunents' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  return $items;
}

function get_words() {
  $titleWordArray = [];
  $descriptionWordArray = [];
  $sourceArray = array(
    'buzzfeed',
    'mashable',
    'metro',
    'mirror',
    'the-huffington-post'
  );

  // for ($i=0; $i<1; $i++) {
  for ($i=0; $i<count($sourceArray); $i++) {
    $news = curl_init();
    curl_setopt_array($news, array(
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_URL => 'https://newsapi.org/v1/articles?source='.$sourceArray[$i].'&sortBy=top&apiKey=ccd4623de5dd47dd9c48798e310b4e34'
    ));
    $articles = curl_exec($news);
    curl_close($news);

    $recent_news = json_decode($articles);
    if ($recent_news->status === 'ok') {

      $articleNumber = count($recent_news->articles);
      for ($j=0;$j<$articleNumber;$j++){
        $newArticleArray[] = [];
        $url = $recent_news->articles[$j]->url;
        $exists = db_query("SELECT * FROM raw_words WHERE url = '{$url}'");
        $record = $exists->fetchAssoc();

        if(!$record) {
          $phrase_string = '';
          foreach ($recent_news->articles[$j] as $key => $val) {
            if (is_null($val)) {
              $val = '';
            }
            $val = str_replace("'","`",$val);
            $val = preg_replace('/[^A-Za-z0-9\s]/', '', $val);
            $val = strtolower($val);
            if($key === 'title') {
              $oneWordArray = explode(" ", $val);
              foreach($oneWordArray as $key => $val){
                $titleWordArray[] = [$key, $val];
                $part_of_speech_curl = curl_init();
                curl_setopt_array($part_of_speech_curl, array(
                CURLOPT_RETURNTRANSFER => 1,
                CURLOPT_URL => 'https://api.datamuse.com/words?sp='.$val.'&md=p'
                ));
                $part_of_speech = curl_exec($part_of_speech_curl);
                $part_of_speech = json_decode($part_of_speech);
                $part_of_speech = $part_of_speech[0]->tags[0];
                $phrase_string .= $part_of_speech . ',';
                db_query("INSERT INTO raw_words (word,part_of_speech,position,url) VALUES ('{$val}','{$part_of_speech}', '{$key}', '{$url}');");
              }
            }
          }
          db_query("INSERT INTO phrase_arrays (phrase_array) VALUES ('{$phrase_string}')");
        }
      }
    }
  }

  return "Ready to browse!";

}


function site_form() {
  $form['site'] = array(
    '#title' => 'http://',
    '#type' => 'textfield',
  );

  $form['slider'] = array(
  '#type' => 'slider',
  '#title' => '% randomness',
  '#animate' => 'fast',
  '#max' => 100,
  '#min' => 0,
  '#orientation' => 'horizontal',
  '#value' => 50,
  '#step' => 1,
  '#display_inputs' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Randomize It',
  );
  return $form;
}

function site_form_submit($form, &$form_state) {
  $_SESSION['site'] = 'http://'.$form_state['values']['site'];
  $_SESSION['randomness'] = $form_state['values']['slider'];
  $form_state['redirect'] = 'grab_website';

  // $form_state['redirect'] = 'grab_website/'.$form_state['values']['site'];
}



function grab_website() {
  $randomness = intval($_SESSION['randomness']['value']);
  $site = $_SESSION['site'];
  getNouns();
  getVerbs();
  getAdjs();
  getAdvs();
  getFiller();
  getPhrases();
  $full_site = file_get_contents($site);
  // $full_site = file_get_contents('http://'.$site);
  $doc = new DOMDocument();
  $doc->loadHTML($full_site);
  $h1s = $doc->getElementsByTagName('h1');
  $h2s = $doc->getElementsByTagName('h2');
  $h3s = $doc->getElementsByTagName('h3');
  $ps = $doc->getElementsByTagName('p');
  $lis = $doc->getElementsByTagName('li');
  $as = $doc->getElementsByTagName('a');
  foreach ($h1s as $h1) {
    if (mt_rand(0,99) < $randomness) {
      $length = count(explode(' ',$h1->nodeValue));
      $h1->nodeValue = ucwords(randomPhrase($length));
    }$h1->setAttribute('class','candidate');
  }
  foreach ($h2s as $h2) {
    if (mt_rand(0,99) < $randomness) {
      $length = count(explode(' ',$h2->nodeValue));
      $h2->nodeValue = ucwords(randomPhrase($length));
      $h2->setAttribute('class','candidate');
    }
  }
  foreach ($h3s as $h3) {
    if (mt_rand(0,99) < $randomness) {
      $length = count(explode(' ',$h3->nodeValue));
      $h3->nodeValue = ucwords(randomPhrase($length));
      $h3->setAttribute('class','candidate');
    }
  }
  foreach ($ps as $p) {
    if (mt_rand(0,99) < $randomness) {
      $length = count(explode(' ',$p->nodeValue));
      $p->nodeValue = ucfirst(randomPhrase($length));
      $p->setAttribute('class','candidate');
    }
  }
  foreach ($lis as $li) {
    if (mt_rand(0,99) < $randomness) {
      $length = count(explode(' ',$li->nodeValue));
      $li->nodeValue = ucfirst(randomPhrase($length));
      $li->setAttribute('class','candidate');
    }
  }
  foreach ($as as $a) {
    if (mt_rand(0,99) < $randomness) {
      // $length = strlen($a->nodeValue);
      // $href = $a->getAttribute('href');
      // $href = str_replace('http://', '', $href);
      // $href = str_replace('https://', '', $href);
      // $href = str_replace('www.', '', $href);
      // $href = str_replace($site, '', $href);
      // $a->setAttribute('href', $href);
      $a->nodeValue = ucfirst(randomPhrase($length));
      $a->setAttribute('class','candidate');
    }
  }
  return $doc->saveHTML();
  // $list = '<ul>';
  // foreach ($h2s as $h1) {
  //   $list .= '<li>'.$h1->nodeValue.'</li>';
  // }
  // return $list;
}

function randomWord($wordType) {
  if($wordType == 'n'){
    return $_SESSION['nouns'][array_rand($_SESSION['nouns'])];
  }
  if($wordType == 'v'){
    return $_SESSION['verbs'][array_rand($_SESSION['verbs'])];
  }
  if($wordType == 'adv'){
    return $_SESSION['advs'][array_rand($_SESSION['advs'])];
  }
  if($wordType == 'adj'){
    return $_SESSION['adjs'][array_rand($_SESSION['adjs'])];
  }
  if($wordType == ''){
    return $_SESSION['filler'][array_rand($_SESSION['filler'])];
  }
  else {
    return $_SESSION['filler'][array_rand($_SESSION['filler'])];
  }
}

function randomPhrase($length) {
  $phrase = '';
  $punct = array('','','','','','','','','','',',',',','');
  $phraseArray = randomPhraseArray();
  for($i=0;$i<$length;$i++){
    $wordpos = $i % count($phraseArray);
    if($i == $length-1) {
      $phrase .= randomWord('n');
    } else {
      $phrase .= randomWord($phraseArray[$wordpos]);
      if ($wordpos == count($phraseArray)) {
        $phrase .= '. ';
      } elseif ($wordpos == 9) {
        $phrase .= '. ';
      }
      elseif ($phraseArray[$wordpos] == 'n') {
        $phrase .= $punct[array_rand($punct)]. ' ';
      } else {
        $phrase .= ' ';
      }
    }
  }

  return $phrase;
}

function randomPhraseArray() {
  return explode(',',$_SESSION['phrases'][array_rand($_SESSION['phrases'])]);
}

function getNouns() {
  $query = db_query("SELECT * FROM raw_words WHERE part_of_speech = 'n'");
  $nouns = [];
  foreach($query as $noun) {
    $nouns[] = $noun->word;
  }
  $_SESSION['nouns'] = $nouns;
}

function getVerbs() {
  $query = db_query("SELECT * FROM raw_words WHERE part_of_speech = 'v'");
  $verbs = [];
  foreach($query as $verb) {
    $verbs[] = $verb->word;
  }
  $_SESSION['verbs'] = $verbs;
}

function getAdjs() {
  $query = db_query("SELECT * FROM raw_words WHERE part_of_speech = 'adj'");
  $adjs = [];
  foreach($query as $adj) {
    $adjs[] = $adj->word;
  }
  $_SESSION['adjs'] = $adjs;
}

function getAdvs() {
  $query = db_query("SELECT * FROM raw_words WHERE part_of_speech = 'adv'");
  $advs = [];
  foreach($query as $adv) {
    $advs[] = $adv->word;
  }
  $_SESSION['advs'] = $advs;
}

function getFiller() {
  $query = db_query("SELECT * FROM raw_words WHERE part_of_speech = ''");
  $fillers = [];
  foreach($query as $filler) {
    $fillers[] = $filler->word;
  }
  $_SESSION['filler'] = $fillers;
}

function getPhrases() {
  $query = db_query("SELECT * FROM phrase_arrays");
  $phrases = [];
  foreach($query as $phrase) {
    $phrases[] = $phrase->phrase_array;
  }
  $_SESSION['phrases'] = $phrases;
}

// function redirect() {
//   $url = $_POST['url'];
//   if (substr($url,0) != 'h' && substr($url,0) != '/') {
//     $_SESSION['site'] = $_SESSION['site'] . $url;
//   } else {
//     $_SESSION['site'] = $url;
//   }
//   drupal_json_output($_SESSION['site']);
// }

function save_phrase() {
  $phrase = $_POST['phrase'];

  global $user;
  $node = new stdClass();
  $node->title = $phrase;
  $node->type = "snippet";
  node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
  $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
  $node->uid = $user->uid;
  $node->status = 1; //(1 or 0): published or not
  $node->promote = 0; //(1 or 0): promoted to front page
  $node->comment = 2; // 0 = comments disabled, 1 = read only, 2 = read/write

  // Term reference (taxonomy) field
  $node->body['und'][0]['value'] = $phrase;

  $node = node_submit($node); // Prepare node for saving
  node_save($node);



  drupal_json_output($phrase);
}
